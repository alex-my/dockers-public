upstream registry_proxy {
    # least_conn;
    server 172.19.3.41:5000 max_fails=10 fail_timeout=10s;
    keepalive 16;
}

server {
    listen        80;
    server_name   your_registry_domain;
    return 301    https://$host$request_uri;
}


server {
    listen 443 ssl;
    server_name  your_registry_domain;

    ssl_certificate   /etc/nginx/ssl/your_registry_domain/fullchain.cer;
    ssl_certificate_key  /etc/nginx/ssl/your_registry_domain/your_registry_domain.key;
    ssl_session_timeout 5m;

    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

    ssl_prefer_server_ciphers on;

    server_tokens off;
    sendfile off;

	# 包含客户端资源，体积比较大
    client_max_body_size 8192m;

    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript application/javascript text/css;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";

    add_header Strict-Transport-Security "max-age=31536000";

    location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        set $Real $http_x_forwarded_for;
        if ( $Real ~ (\d+)\.(\d+)\.(\d+)\.(\d+),(.*) ){
            set $Real $1.$2.$3.$4;
        }
        proxy_set_header X-Real-Ip $Real;
        
        proxy_pass http://registry_proxy;
    }
}